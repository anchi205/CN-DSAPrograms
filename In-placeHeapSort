Given an integer array of size N. Sort this array (in decreasing order) using heap sort.

Note: Space complexity should be O(1).

Input Format:
The first line of input contains an integer, that denotes the value of the size of the array or N.
The following line contains N space separated integers, that denote the value of the elements of the array.

Output Format :
The first and only line of output contains array elements after sorting. The elements of the array in the output are separated by single space.

Constraints :
1 <= n <= 10^6


#include <iostream>
#include "solution.h"

using namespace std;

int main() {
    int size;
    cin >> size;

    int *input = new int[size];

    for (int i = 0; i < size; i++) {
        cin >> input[i];
    } 

    heapSort(input, size);

    for (int i = 0; i < size; i++) {
        cout << input[i] << " ";
    } 

    delete[] input;
}

void removeMin(int arr[], int n) {
    int i = n-1;
    while(i>0){
        int temp = arr[i];
        arr[i] = arr[0];
        arr[0] = temp;

        i--;
     	int parentIndex = 0;
	    int leftChildIndex = 2 * parentIndex + 1;
    	int rightChildIndx = 2 * parentIndex + 2;
	
	    while(leftChildIndex < i) {
            int minIndex = parentIndex;
		    if(arr[minIndex] > arr[leftChildIndex]) {
                minIndex = leftChildIndex;
            }
		    if(rightChildIndx < i && arr[rightChildIndx] < arr[minIndex]) {
			    minIndex = rightChildIndx;
		    }
		    if(minIndex == parentIndex) {
			    break;
		    }
		    int temp = arr[minIndex];
		    arr[minIndex] = arr[parentIndex];
		    arr[parentIndex] = temp;
		
	    	parentIndex = minIndex;
		    leftChildIndex = 2 * parentIndex + 1;
		    rightChildIndx = 2 * parentIndex + 2;
        }
        if(i==0){
            if(arr[0]<arr[1]){
                int temp = arr[1];
                arr[1] = arr[0];
                arr[0] = temp;
            }
        }
    }
}
void heapSort(int arr[], int n) {
    for(int i = 1; i < n; i++){
        int j = i;
        while (j > 0) {
            int parentIndex = (j - 1) / 2;

            if (arr[j] < arr[parentIndex]) {
                int temp = arr[j];
                arr[j] = arr[parentIndex];
                arr[parentIndex] = temp;
                j = parentIndex;
            } 
            
            else {
                break; // exits while
            }
        }
    }   
    removeMin(arr, n);
}
